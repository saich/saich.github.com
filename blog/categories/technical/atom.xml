<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Technical | Reflections of a scattered Mind!!]]></title>
  <link href="http://saiprasad.me/blog/categories/technical/atom.xml" rel="self"/>
  <link href="http://saiprasad.me/"/>
  <updated>2014-01-24T11:13:22+05:30</updated>
  <id>http://saiprasad.me/</id>
  <author>
    <name><![CDATA[Sai Prasad]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Learning Android : Why I moved away from Eclipse]]></title>
    <link href="http://saiprasad.me/blog/2011/11/learning-android-why-i-moved-away-from-eclipse/"/>
    <updated>2011-11-15T00:00:00+05:30</updated>
    <id>http://saiprasad.me/blog/2011/11/learning-android-why-i-moved-away-from-eclipse</id>
    <content type="html"><![CDATA[<p>So, after a very long break, I started back with getting familiar with Android development&hellip; Felt happy seeing that Google has made a lot of improvements / features in the ADT. But, everything evaporated when I tried to debug an app on my machine, and got this error: &ldquo;Android Packaging Problem: resources.ap_ does not exist&rdquo;. I tried cleaning the project, restarted Eclipse, and re-creating the Eclipse project and this error didn&rsquo;t go away&hellip; Googling it also didn&rsquo;t help much&hellip; Then, I went to sleep&hellip;.</p>

<p>The next day, to my surprise, there was no error and I was able to debug my app, at last&hellip; But, it didn&rsquo;t last long&hellip; After 3 hours, the same error is back&hellip;. It looked like this ADT solves everything else (Resource Editors, WYSIWYG Editor etc.) but the basic task it is supposed to do (Basic compiling / packaging / debugging)&hellip;</p>

<p>Now that perfect mood is set to go hunting for a new and <em>reliable</em> IDE, I searched in <a href="http://www.stackoverflow.com" target="_blank">stackoverflow.com</a> for answers&hellip; Found some thread saying <a href="http://www.jetbrains.com/idea/features/google_android.html" target="_blank">IntelliJ IDEA</a> is good&hellip;. So, downloaded it, downloaded its dependencies (JSDK 1.6) and installed them&hellip; And there is no turning back&hellip; I don&rsquo;t miss the resource.ap_ error at all&hellip;</p>

<p><strong>The Pros of IDEA:</strong></p>

<ol>
    <li><strong></strong>Reliable (unlike ADT for Eclipse) at compiling and packaging...</li>
    <li>Supports the Android "Library" projects also... (Tried it with <a href="https://github.com/cyrilmottier/GreenDroid" target="_blank">GreenDroid</a>, and worked without a glitch)</li>
    <li>Import Eclipse projects directly...</li>
    <li>Integrated github support (and a few more Version Controls)</li>
    <li>Decent enough features, for Refactoring, Imports optimization, Code completion etc.</li>
</ol>


<p><strong>The Cons:</strong></p>

<p>This could become a big list, but the reliability when compared to Eclipse beats everything in the below list combined..at least for me&hellip;</p>

<ol>
    <li>Page Scrolling - Cannot use the Mouse Scroll.. Need to click on scrollbar and scroll it down.. :(</li>
    <li>Logcat sucks!! The one in Eclipse is hell lot better.. Seriously needs Filter by Application, Colored text based on log level, and saved searches.. A simple textarea doesn't justify such an important feature..</li>
    <li>The keyboard shortcuts are completely different from Eclipse.. Why doesn't IDEs come with keyboard binding set of other IDEs that user can choose to use? :(</li>
    <li>Memory hogger, seems to be more than Eclipse.. Could it be because of Swing &amp; Java?</li>
    <li>Basic XML Editor - There are no Android Resource Editors.... I prefer to write XML files by hand, though...</li>
    <li>Some code warnings may misguide you.. It keeps telling me that <a href="http://developer.android.com/reference/android/database/Cursor.html" target="_blank">Cursor</a> cannot be NULL, though I have personally seen cases where it will be...</li>
</ol>


<p>In simpler words, IDEA may not be as good as Eclipse in general, but for Android development, it is certainly a better choice&hellip; at least for now..</p>

<p>Atleast, you&rsquo;ll know you are frustrated not because of IDE&hellip; (Trust me, frustration because of an IDE, instead of logic/code isn&rsquo;t even worth trying to know.. )</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Browser Wars: Learning from each other]]></title>
    <link href="http://saiprasad.me/blog/2011/06/browser-wars-learning-from-each-other/"/>
    <updated>2011-06-18T00:00:00+05:30</updated>
    <id>http://saiprasad.me/blog/2011/06/browser-wars-learning-from-each-other</id>
    <content type="html"><![CDATA[<p>The most popular browsers from the country I come from (where Mac is rare) are Google Chrome, Mozilla Firefox &amp; Microsoft Internet Explorer. Like any other browser, these all have the same goal &ndash; to make browsing experience richer &amp; better. Yet, there are a lot of differences in their ways and some are better than other in some ways.</p>

<p>If I ever have to make a generic purpose browser, I&rsquo;d certainly pick good (for inclusion) &amp; bad (for exclusion) things from the current browsers.</p>

<h5>Google Chrome:</h5>


<p>The recent one and certainly a game changer. It has improved the user expectations from a browser by 100x.</p>

<p><strong>The Good</strong>:</p>

<ul>
    <li>The crashless browser -Â  protect the user even from the crashes in external plug-ins (Thankfully, Firefox also implemented out-of-box plugins)</li>
    <li>Faster startup time - Do things that are only absolutely needed. Nothing more. Defer everything else, to post-startup (in parallel with the user's browsing).</li>
    <li>Sandboxing - Whatever you do on web stays on web. Protect the machine from all the various security issues.</li>
    <li>Explicit permissions listed for Extensions - user must know what an extension is capable of (despite of what it claims to do)</li>
    <li>Silent updation: Push updates only when it is good for users. Then, who would say "no" to better browsing experience? So, there is no point in showing an annoying dialog "Updates Available" when you already know the user clicks "yes".</li>
    <li>Incognito Mode starts a new session without closing the current session (sadly, Firefox does that)</li>
</ul>


<p><strong>The Bad: </strong></p>

<ul>
    <li>Weakest &amp; the most limited extension model - So limited that it may give you a feeling that the word "extension" doesn't suit it.</li>
    <li>Still an immature platform for developers. Extension Model hasn't moved but the other parts (rendering, UI etc.) are moving forward at a very fast pace. Even, many bugs in the chrome extensions are not getting fixed for many months.</li>
</ul>


<h5>Mozilla Firefox</h5>


<p><strong>The Good:</strong></p>

<ul>
    <li>Super cool extension model. There is almost nothing that can't be done by the addons. And, XPCOM works across all the platforms.</li>
    <li>Known to be the developer-friendly browser from long time. One of the early browsers that emphasized on standards and innovation from its early days.</li>
</ul>


<p><strong>The Bad:</strong></p>

<ul>
    <li>Known to be memory hog. Not efficient at Memory management. Have issues with Intel's hyperthreading.</li>
    <li>MaxVersion in addons is mandatory and is limited to current version (you can't just use * for maxversion). The only issue with this is each and every addon is to be updated (you add features or not) with every major version release (which is once in 12 weeks as of now).</li>
    <li>Private browsing closes the current session and starts a new one. After closing private session, it restores the earlier session. This means you can't do both (with default command line options)</li>
    <li>Every extension have complete control (including a binary component), because of lack of a permission model. You can never trust an extension because of this!</li>
</ul>


<h5>Internet Explorer</h5>


<p><strong>The Good:</strong></p>

<ul>
    <li>Its never late to catch up with the standards, speed &amp; security (with IE 9 &amp; IE 10)</li>
    <li>Native 64-bit for 64-bit OS. (I can't believe Firefox and Chrome do not have them for Windows)</li>
</ul>


<p><strong>The Bad:</strong></p>

<ul>
    <li>Still maintains the completely idiotic 'Quirks Mode'. I don't see  the greater cause of maintaining a version which is full of bugs,  extremely slow and follows no standards, and also all developers hate  it.</li>
    <li>Extension Model - Its a big pain. You need to be comfortable  with COM to get started with. Its much comfortable to think addons  don't exist at all for this version.</li>
    <li>Supports ActiveX plugins when the whole world uses NPAPI plugins.</li>
</ul>


<p><em>Disclaimer: All the above are my own thoughts, and I&rsquo;ve to confess I haven&rsquo;t researched every point. So, not all the above may be true, but is to the best of my knowledge.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[5 Reasons I dislike Flash]]></title>
    <link href="http://saiprasad.me/blog/2011/06/5-reasons-i-dislike-flash/"/>
    <updated>2011-06-11T00:00:00+05:30</updated>
    <id>http://saiprasad.me/blog/2011/06/5-reasons-i-dislike-flash</id>
    <content type="html"><![CDATA[<p>The times have changed to where we spend most of our lives on the web. But, web is far from perfect. It has annoyances lurking around at every corner. Most of the times I get annoyed is because of the bad code (in HTML, CSS, Javascript) by the developers. The next big annoyance is from Flash content, but I can&rsquo;t blame the content developers for their code. Its the design issue of the Flash runtime itself&hellip;</p>

<p>The top 5 things in Flash that annoys me daily:</p>

<ol>
    <li>Browser shortcuts (like, Ctrl+W, Ctrl+T) do not work when focused on flash elements, since it consumes all the keyboard events. I'd expect it to at least pass them to browser if it doesn't handle a key event, but it doesn't even bother.</li>
    <li>Zoom doesn't work - Ctrl++, Ctrl+- are useless. You have to read the content in SWF in the published size itself. You cannot increase or decrease it size. :(</li>
    <li>Middle Click doesn't work - I can't open a link in new tabs. Opening links in new tabs from SWF is a small-size challenge.</li>
    <li>I can't find the text I'm looking for with Ctrl + F. You can't just search in Flash content, unless the SWF itself contains a search box &amp; search implementation.</li>
    <li>Its pretty famous &amp; is gonna stay there longer. And the worst part - everyone uses it in their site, though there is absolutely no need for it (making my browsing experience annoying) :(</li>
</ol>


<p>Disclaimer: The above view is completely personal and has absolutely nothing to do with anything (including friends &amp; employer also) else.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Firefox Addons: Little Housekeeping Tips]]></title>
    <link href="http://saiprasad.me/blog/2011/03/firefox-addons-little-housekeeping-tips/"/>
    <updated>2011-03-26T00:00:00+05:30</updated>
    <id>http://saiprasad.me/blog/2011/03/firefox-addons-little-housekeeping-tips</id>
    <content type="html"><![CDATA[<p>I&rsquo;m working on a Firefox addon in the last few weeks and this is my 1st experience with Firefox addons. During my tiny experience, I came across some of those little things that helps you when you&rsquo;re in trouble &amp; here I&rsquo;m writing about those simple tips. Of course, I mixed some changes in Gecko 2.0 also along with these&hellip;.</p>

<p>I know these are very basic, and almost everyone who worked on the addons might be knowing them, but hey, didn&rsquo;t I mention you that this is my first encounter with building firefox addon?</p>

<h3>How can I be sure if a Binary XPCOM component is loaded / attempted to load from Firefox?</h3>

<p>Close all Firefox windows and run the following from command line:
<code>
set NSPR_LOG_MODULES=all:5  
set NSPR_LOG_FILE=c:\ff.log  
C:\Program Files\Mozilla Firefox\firefox.exe  
</code></p>

<p>What does it do? Line 1 sets the modules to load &amp; the log level. In the above commands, we are asking to log all modules with log level 5 (meaning all logs). Line 2 sets the path to log file. Now, just launch the Firefox from command line (so that the variables are set)</p>

<p>Troubleshooting Tip: Do not use quotes around the log file name, like <code>set NSPR_LOG_FILE="C:\ff.log"</code>. I tried it the 1st time and it doesn&rsquo;t work.</p>

<p>References: <a title="MDC: Troubleshooting XPCOM components registration" href="https://developer.mozilla.org/en/Troubleshooting_XPCOM_components_registration">Troubleshooting XPCOM components registration</a>, <a title="NSPR Reference: Logging" href="http://www.mozilla.org/projects/nspr/reference/html/prlog.html">NSPR Logging</a></p>

<h3>How can I sure if an XPCOM component is successfully registered?</h3>

<p>This works for both binary &amp; JS components.</p>

<p>Enable Chrome errors in Error Console, if you haven&rsquo;t done already! To enable, set <code>javascript.options.showInConsole</code> to <code>true</code> in <code>about:config</code> preferences.</p>

<p>Open Error Console (Ctrl+Shift+J)</p>

<p>Evaluate <code>Components.classes["components-contract-id"].name</code>. Use with the components' contract id.</p>

<p>If it gives no error, the component is successfully registered.</p>

<p>References:Â  <a href="http://kb.mozillazine.org/Javascript.options.showInConsole">javascript.options.showInConsole</a>,  <a title="MDC: Troubleshooting XPCOM components registration" href="https://developer.mozilla.org/en/Troubleshooting_XPCOM_components_registration">Troubleshooting XPCOM components registration</a></p>

<h3>How to log errors from the XPCOM components?</h3>

<p>This is simple thing, and I realized a bit late about it. This is currently how I&rsquo;m debugging my components (need to see if there is a better way). You can report error messages to the Error Console with:</p>

<p>```</p>

<pre><code>Components.utils.reportError("This is the description of the error");
</code></pre>

<p>```</p>

<p>References: <a title="Error Console - MDC Doc Center" href="https://developer.mozilla.org/en/Error_Console">Error Console</a></p>

<h3>nsIConsoleService</h3>

<p>The inconvenience with the reportError API is that it logs all messages as errors. To log at various levels (debug / warning / info), we can use the <code>nsIConsoleService</code>. The <code>logStringMessage()</code> function of this service looks very handy.</p>

<p>I haven&rsquo;t used it yet, so I cannot give any more information on this!</p>

<p>References: <a title="nsIConsoleService Documentation on MDC" href="https://developer.mozilla.org/en/XPCOM_Interface_Reference/nsIConsoleService">nsIConsoleService Reference</a></p>

<h3>UnPack option</h3>

<p>If you are using binary components in the addon, you MUST set the unpack value to true in <code>install.rdf</code> file.</p>

<p>References: <a href="https://developer.mozilla.org/en/Install_Manifests#unpack">unpack in Install Manifests</a></p>

<h3>Bootstrap Addons</h3>

<p>This feature introduced in Gecko 2.0 answers one of my long-time questions &ndash; <em>Why should I restart the browser everytime I add / update / disable / remove an addon?</em></p>

<p>Though this feature is good, it looks complicated to do all the manual work. I&rsquo;ve skipped trying this feature for now, but I&rsquo;ll look into this some other time.</p>

<p>References: <a href="https://developer.mozilla.org/en/Extensions/Bootstrapped_extensions">Bootstrapped Extensions</a></p>

<h3>Gecko 2.0 XPCOM Changes</h3>

<p>Though there are many changes, I&rsquo;m listing the few which I came across.</p>

<ul>
<li>Javascript component must export <code>NSGetFactory()</code> instead of <code>NSGetModule()</code> function. Binary component must export <code>NSModule()</code> instead of <code>NSGetModule()</code> function. I&rsquo;ve explained this in detail in the next section.</li>
<li>Components in components/ folder are no longer auto-registered &amp; auto-loaded.Components registration will be done through the manifest file.</li>
<li>Category Registrations are done through manifest file. Also, category names are modified.</li>
<li>You&rsquo;ll have to use the XULRunner SDK 2.0 for Gecko 2.0</li>
</ul>


<p>Troubleshooting Tip: Use the sample CPP file (from the references) to get started for binary components. I got a few compilation errors initially, and then I has to add <code>MOZ_NO_MOZALLOC</code> to preprocessor definitions as read somewhere, and it worked..</p>

<p>References: <a title="XPCOM Changes in Gecko 2.0" href="https://developer.mozilla.org/en/XPCOM/XPCOM_changes_in_Gecko_2.0">XPCOM Changes in Gecko 2.0</a>, <a href="http://mxr.mozilla.org/mozilla-central/source/xpcom/sample/nsSampleModule.cpp">nsSampleModule.cpp source code</a></p>

<h3>Component Registration in Firefox 4.0</h3>

<p>All the components to be registered has to mentioned in the <code>chrome.manifest</code> file.</p>

<ul>
<li>All the interfaces (xpt files) are to be registered using <code>interfaces</code> command.</li>
<li>A JS component must use <code>component</code> command. It needs to mention its class id also. The contract id can be assigned to this JS component by a separate <code>contract</code> command.</li>
<li>A binary component can be registered with <code>binary-component</code> command. A binary component registration need not specify any class-id or contract-id in the manifest file, since they are available through the exported <code>NSModule()</code> function.</li>
</ul>


<p>References: <a href="https://developer.mozilla.org/en/Chrome_Registration">Chrome Registration</a></p>

<p>If you have felt all the content is copied from somewhere, its ok because its true. I&rsquo;ve learned many things from <a title="Mozilla Developer Center" href="https://developer.mozilla.org">MDC</a> itself, I&rsquo;m just aggregating those things here!!</p>

<p>If I&rsquo;ve got something wrong in here, please do mention them in the comments as I have to correct them in the post as well as in my mind&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Debug PHP: Setup]]></title>
    <link href="http://saiprasad.me/blog/2010/12/debug-php-setup/"/>
    <updated>2010-12-01T00:00:00+05:30</updated>
    <id>http://saiprasad.me/blog/2010/12/debug-php-setup</id>
    <content type="html"><![CDATA[<p>Okay! I forgot how to set up debug for my PHP, so I had trouble today trying to set it up today and had to spend about an hour to do so&hellip; So, I decided I should note it down for future reference and hence I&rsquo;m here now!</p>

<p>Tools: PHPEclipse, PHP 5.3.3, XDebug</p>

<ol>
<li>Make a PHP file with content as <code>&lt;?php echo phpinfo(); ?&gt;</code> and browse the page on localhost.</li>
<li>Copy the source of the above page from the browser and paste it in <a href="http://xdebug.org/find-binary.php"><a href="http://xdebug.org/find-binary.php">http://xdebug.org/find-binary.php</a></a> and click &ldquo;Analyze my phpinfo() output&rdquo;. This step will give you tailored instructions on how to setup, especially points to the right DLL to use.</li>
<li>Be careful with the editing <code>php.ini</code> file. Prefer to add the zend_extension line at the top of the file (It doesn&rsquo;t work if its the last line).</li>
<li>And start debugging from the Eclipse IDE !!</li>
</ol>

]]></content>
  </entry>
  
</feed>
